// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "dashboard-service.proto" (package "api", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { DashboardService } from "./dashboard-service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetNumberOfPeopleResponse } from "./dashboard-service";
import type { GetNumberOfPeopleRequest } from "./dashboard-service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service api.DashboardService
 */
export interface IDashboardServiceClient {
    /**
     * @generated from protobuf rpc: GetNumberOfPeople(api.GetNumberOfPeopleRequest) returns (api.GetNumberOfPeopleResponse);
     */
    getNumberOfPeople(input: GetNumberOfPeopleRequest, options?: RpcOptions): UnaryCall<GetNumberOfPeopleRequest, GetNumberOfPeopleResponse>;
}
/**
 * @generated from protobuf service api.DashboardService
 */
export class DashboardServiceClient implements IDashboardServiceClient, ServiceInfo {
    typeName = DashboardService.typeName;
    methods = DashboardService.methods;
    options = DashboardService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetNumberOfPeople(api.GetNumberOfPeopleRequest) returns (api.GetNumberOfPeopleResponse);
     */
    getNumberOfPeople(input: GetNumberOfPeopleRequest, options?: RpcOptions): UnaryCall<GetNumberOfPeopleRequest, GetNumberOfPeopleResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetNumberOfPeopleRequest, GetNumberOfPeopleResponse>("unary", this._transport, method, opt, input);
    }
}
